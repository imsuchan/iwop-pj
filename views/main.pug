extends layout

block content
  .timeline
    if user
      #main-form
        form#twit-form(action='/post' method='post' enctype='multipart/form-data')
          .input-group
            textarea#twit(name='content' maxlength=140)
          .img-preview
            img#img-preview(src='' style='display: none;' width='250' alt='미리보기')
            input#img-url(type='hidden' name='url')
          div
            label#img-label(for='img') photo
            input#img(type='file' accept='image/*')
            button#twit-btn.btn(type='submit' onclick="location.href='/main'") upload
    .twits
      for twit in twits
        .twit
          input.twit-user-id(type='hidden' value=twit.user.id)
          if user && user.id === twit.user.id
            button.twit-delete delete
          input.twit-id(type='hidden' value=twit.id)
          .twit-author= twit.user.nick
          -const follow = user && user.Followings.map(f => f.id).includes(twit.user.id);
          if user && user.id !== twit.user.id && !follow
            button.twit-follow follow
          else if user && user.id !== twit.user.id && follow  
            button.twit-unfollow unfollow
          .twit-content= twit.content
          if twit.img
            .twit-img
              img(src=twit.img alt='thumnails')
          -const like = user && twit && twit.Liker &&twit.Liker.map(l => l.id).includes(user.id)
          if user && !like
            button.like like
          else if user && like
            button.unlike unlike
          
  script.
    if (document.getElementById('img')) {
      document.getElementById('img').addEventListener('change', function (e) {
        var formData = new FormData()
        console.log(this, this.files)
        formData.append('img', this.files[0])
        var xhr = new XMLHttpRequest()
        xhr.onload = function () {
          if (xhr.status === 200) {
            var url = JSON.parse(xhr.responseText).url;
            document.getElementById('img-url').value = url
            document.getElementById('img-preview').src = url
            document.getElementById('img-preview').style.display = 'inline'
          } else {
            console.error(xhr.responseText)
          }
        }
        xhr.open('POST', '/post/img')
        xhr.send(formData)
      })
    }
    document.querySelectorAll('.twit-follow').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id')
        if (isLoggedIn) {

          var userId = tag.parentNode.querySelector('.twit-user-id').value
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('follow?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText)
                }
              };
              xhr.open('POST', '/user/' + userId + '/follow')
              xhr.send()
            }
          }
        }
      })
    })
    document.querySelectorAll('.twit-unfollow').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id')
        if (isLoggedIn) {
          var userId = tag.parentNode.querySelector('.twit-user-id').value
          var myId = isLoggedIn.value;
          if (userId !== myId) {
            if (confirm('unfollow?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText)
                }
              };
              xhr.open('POST', '/user/' + userId + '/unfollow')
              xhr.send()
            }
          }
        }
      })
    })
    document.querySelectorAll('.twit-delete').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id')
        var twitId = tag.parentNode.querySelector('.twit-id').value
        if (isLoggedIn) {
          var userId = tag.parentNode.querySelector('.twit-user-id').value
          var myId = isLoggedIn.value;
          if (userId === myId) {
            if (confirm('delete?')) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText)
                }
              };
              xhr.open('DELETE', '/post/' + twitId)
              xhr.send()
            }
          }
        }
      })
    })
    
   document.querySelectorAll('.like').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id')
        var twitId = tag.parentNode.querySelector('.twit-id').value
        if (isLoggedIn) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText)
                }
              }
              xhr.open('POST', '/post/' + twitId + '/like')
              xhr.send()
          }
      })
    })

     document.querySelectorAll('.unlike').forEach(function (tag) {
      tag.addEventListener('click', function () {
        var isLoggedIn = document.querySelector('#my-id')
        var twitId = tag.parentNode.querySelector('.twit-id').value
        if (isLoggedIn) {
              var xhr = new XMLHttpRequest();
              xhr.onload = function () {
                if (xhr.status === 200) {
                  location.reload();
                } else {
                  console.error(xhr.responseText)
                }
              }
              xhr.open('DELETE', '/post/' + twitId + '/like')
              xhr.send()
          }
      })
    })